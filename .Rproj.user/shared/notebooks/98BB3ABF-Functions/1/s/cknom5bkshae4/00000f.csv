"0","plot.transparency <- function(nfrac = 1, # length of fractions for range"
"0","                              max.frac = 1, # 1/max.frac"
"0","                              left.poly = 0.1,"
"0","                              poly.bar.orginal = poly.bar.orginal,"
"0","                              range = 3,"
"0","                              fps = 1,"
"0","                              set.inla.seed = 2303,"
"0","                              col=alpha('grey', 0),"
"0","                              plot.points = points(loc.data, "
"0","                                              pch = 16, "
"0","                                              cex = 0.8, "
"0","                                              col=alpha('gray', 0)),"
"0","                              gif.path = ""gif/gif.fx/"","
"0","                              pal.field = turbo(50),"
"0","                              pal.pos.mean = turbo(50),"
"0","                              pal.pos.sd = turbo(50),"
"0","                              pal.pos.q25 = turbo(50),"
"0","                              pal.pos.q50 = turbo(50),"
"0","                              pal.pos.q975 = turbo(50),"
"0","                              "
"0","                              pal.pos.mean.st = turbo(50),"
"0","                              pal.pos.sd.st = turbo(50),"
"0","                              pal.pos.q25.st = turbo(50),"
"0","                              pal.pos.q50.st = turbo(50),"
"0","                              pal.pos.q975.st = turbo(50),"
"0","                              ..."
"0","    ){"
"0","  dir_out_f <- file.path(tempdir(), ""truefield_gif"")"
"0","  dir.create(dir_out_f, recursive = TRUE)"
"0","  "
"0","  # barrier model"
"0","  dir_out_pm <- file.path(tempdir(), ""posmean_gif"")"
"0","  dir.create(dir_out_pm, recursive = TRUE)"
"0","  "
"0","  dir_out_sd <- file.path(tempdir(), ""possd_gif"")"
"0","  dir.create(dir_out_sd, recursive = TRUE)"
"0","  "
"0","  dir_out_q25 <- file.path(tempdir(), ""posq25_gif"")"
"0","  dir.create(dir_out_q25, recursive = TRUE)"
"0","  "
"0","  dir_out_q5 <- file.path(tempdir(), ""posq5_gif"")"
"0","  dir.create(dir_out_q5, recursive = TRUE)"
"0","  "
"0","  dir_out_q975 <- file.path(tempdir(), ""posq975_gif"")"
"0","  dir.create(dir_out_q975, recursive = TRUE)"
"0","  "
"0","  # stationary model"
"0","  dir_out_s <- file.path(tempdir(), ""statmodel_gif"")"
"0","  dir.create(dir_out_s, recursive = TRUE)"
"0","  "
"0","  dir_out_st.sd <- file.path(tempdir(), ""st.sd_gif"")"
"0","  dir.create(dir_out_st.sd, recursive = TRUE)"
"0","  "
"0","  dir_out_st.q25 <- file.path(tempdir(), ""pos.st.q25_gif"")"
"0","  dir.create(dir_out_st.q25, recursive = TRUE)"
"0","  "
"0","  dir_out_st.q5 <- file.path(tempdir(), ""pos.st.q5_gif"")"
"0","  dir.create(dir_out_st.q5, recursive = TRUE)"
"0","  "
"0","  dir_out_st.q975 <- file.path(tempdir(), ""pos.st.q975_gif"")"
"0","  dir.create(dir_out_st.q975, recursive = TRUE)"
"0","  "
"0","  fr <- seq(from = left.poly, to = max.frac, length = nfrac)/max.frac"
"0","  if (fr[1] < left.poly) fr[1] <- left.poly"
"0","  for (r in 1:nfrac) {"
"0","    f <- fr[r]"
"0","    range.fraction <- c(left.poly, f)"
"0","    trans <- transparency(mesh = mesh, fem = fem, "
"0","                barrier.triangles = barrier.triangles, "
"0","                prior.range = c(1.44, 0.5), prior.sigma = c(0.7, 0.5),"
"0","                range.fraction = c(left.poly, f),"
"0","                range = range,"
"0","                set.inla.seed = set.inla.seed, # make sure is the same as prev. fx if loc.data = T"
"0","                loc.data = loc.data, "
"0","                sigma.u = 1, sigma.epsilon = 0.2,"
"0","                poly.original = poly.bar.orginal,"
"0","                prior.range.st = c(1, 0.5),"
"0","                prior.sigma.st = c(1, 0.5),"
"0","                return.list = TRUE"
"0","    )"
"0","    "
"0","    # SPATIAL FIELD, u"
"0","    fpp <- file.path(dir_out_f, paste0(f, "".png""))"
"0","    png(fpp)"
"0","    "
"0","    local.plot.field(trans$list.field$sample, "
"0","                     main=""Spatial posterior for Barrier model"","
"0","                     sub = paste(""Barrier Model, range.fraction = c("", "
"0","                               range.fraction[1], "", "", range.fraction[2], "")""),"
"0","                     pal = pal.field)"
"0","    plot(poly.bar.orginal, add=T, col = col)"
"0","    plot.points"
"0","    dev.off()"
"0","    "
"0","    # POSTERIOR MEAN"
"0","    fpp <- file.path(dir_out_pm, paste0(f, "".png""))"
"0","    png(fpp)"
"0","    "
"0","    local.plot.field(trans$pos.bm$res$summary.random$s$mean, "
"0","                     main=""Spatial mean posterior for Barrier model"","
"0","                     sub = paste(""Barrier Model, range.fraction = c("", "
"0","                               range.fraction[1], "", "", range.fraction[2], "")""),"
"0","                     pal = pal.pos.mean)"
"0","    plot(poly.bar.orginal, add=T, col = col)"
"0","    dev.off()"
"0","    "
"0","    #POS SD"
"0","    fpp <- file.path(dir_out_sd, paste0(f, "".png""))"
"0","    png(fpp)"
"0","    "
"0","    local.plot.field(trans$pos.bm$res$summary.random$s$sd, "
"0","                     main=""Spatial sd posterior for Barrier model"","
"0","                     sub = paste(""Barrier Model, range.fraction = c("", "
"0","                               range.fraction[1], "", "", range.fraction[2], "")""),"
"0","                     pal = pal.pos.sd)"
"0","    plot(poly.bar.orginal, add=T, col = col)"
"0","    dev.off()"
"0","    "
"0","    #POS QUANTILES"
"0","    # 0.025"
"0","    fpp <- file.path(dir_out_q25, paste0(f, "".png""))"
"0","    png(fpp)"
"0","    "
"0","    local.plot.field(trans$pos.bm$res$summary.random$s[,4], "
"0","                     main=""Spatial 0.025 quantile posterior for Barrier model"","
"0","                     sub = paste(""Barrier Model, range.fraction = c("", "
"0","                               range.fraction[1], "", "", range.fraction[2], "")""),"
"0","                     pal = pal.pos.q25)"
"0","    plot(poly.bar.orginal, add=T, col = col)"
"0","    dev.off()"
"0",""
"0","    # 0.5"
"0","    fpp <- file.path(dir_out_q5, paste0(f, "".png""))"
"0","    png(fpp)"
"0","    "
"0","    local.plot.field(trans$pos.bm$res$summary.random$s[,5], "
"0","                     main=""Spatial 0.5 quantile posterior for Barrier model"","
"0","                     sub = paste(""Barrier Model, range.fraction = c("", "
"0","                               range.fraction[1], "", "", range.fraction[2], "")""),"
"0","                     pal = pal.pos.q50)"
"0","    plot(poly.bar.orginal, add=T, col = col)"
"0","    dev.off()"
"0","    "
"0","    # 0.975"
"0","    fpp <- file.path(dir_out_q975, paste0(f, "".png""))"
"0","    png(fpp)"
"0","    "
"0","    local.plot.field(trans$pos.bm$res$summary.random$s[,6], "
"0","                     main=""Spatial 0.975 quantile posterior for Barrier model"","
"0","                     sub = paste(""Barrier Model, range.fraction = c("", "
"0","                               range.fraction[1], "", "", range.fraction[2], "")""),"
"0","                     pal = pal.pos.q975)"
"0","    plot(poly.bar.orginal, add=T, col = col)"
"0","    dev.off()"
"0","    "
"0","    # SPATIAL ESTIMATE WITH STATIONARY MODEL"
"0","    fpp <- file.path(dir_out_s, paste0(f, "".png""))"
"0","    png(fpp)"
"0","    "
"0","    local.plot.field(trans$pos.st$res$summary.random$s$mean,"
"0","                     main=""Spatial estimate with the stationary model"","
"0","                     sub = paste(""Barrier Model, range.fraction = c("", "
"0","                               range.fraction[1], "", "", range.fraction[2], "")""),"
"0","                     pal = pal.pos.mean.st) "
"0","    plot(poly.bar.orginal, add=T, col = col)"
"0","    dev.off()"
"0","    "
"0","    #POS SD st"
"0","    fpp <- file.path(dir_out_st.sd, paste0(f, "".png""))"
"0","    png(fpp)"
"0","    "
"0","    local.plot.field(trans$pos.st$res$summary.random$s$sd, "
"0","                     main=""Spatial sd posterior for Stationary model"","
"0","                     sub = paste(""Barrier Model, range.fraction = c("", "
"0","                               range.fraction[1], "", "", range.fraction[2], "")""),"
"0","                     pal = pal.pos.sd.st)"
"0","    plot(poly.bar.orginal, add=T, col = col)"
"0","    dev.off()"
"0","    "
"0","    #POS QUANTILES st"
"0","    # 0.025 st"
"0","    fpp <- file.path(dir_out_st.q25, paste0(f, "".png""))"
"0","    png(fpp)"
"0","    "
"0","    local.plot.field(trans$pos.st$res$summary.random$s[,4], "
"0","                     main=""Spatial 0.025 quantile posterior for Stationary model"","
"0","                     sub = paste(""Barrier Model, range.fraction = c("", "
"0","                               range.fraction[1], "", "", range.fraction[2], "")""),"
"0","                     pal = pal.pos.q25.st)"
"0","    plot(poly.bar.orginal, add=T, col = col)"
"0","    dev.off()"
"0",""
"0","    # 0.5 st"
"0","    fpp <- file.path(dir_out_st.q5, paste0(f, "".png""))"
"0","    png(fpp)"
"0","    "
"0","    local.plot.field(trans$pos.st$res$summary.random$s[,5], "
"0","                     main=""Spatial 0.5 quantile posterior for Stationary model"","
"0","                     sub = paste(""Barrier Model, range.fraction = c("", "
"0","                               range.fraction[1], "", "", range.fraction[2], "")""),"
"0","                     pal = pal.pos.q50.st)"
"0","    plot(poly.bar.orginal, add=T, col = col)"
"0","    dev.off()"
"0","    "
"0","    # 0.975 st"
"0","    fpp <- file.path(dir_out_st.q975, paste0(f, "".png""))"
"0","    png(fpp)"
"0","    "
"0","    local.plot.field(trans$pos.st$res$summary.random$s[,6], "
"0","                     main=""Spatial 0.975 quantile posterior for Stationary model"","
"0","                     sub = paste(""Barrier Model, range.fraction = c("", "
"0","                               range.fraction[1], "", "", range.fraction[2], "")""),"
"0","                     pal = pal.pos.q975.st)"
"0","    plot(poly.bar.orginal, add=T, col = col)"
"0","    dev.off()"
"0","  }"
"0","  "
"0","    ## bm"
"0","    # SPATIAL FIELD, u"
"0","    image_write(image = image_animate("
"0","      image_join("
"0","        lapply(list.files(dir_out_f, full.names = TRUE), image_read)), "
"0","      fps = fps), "
"0","      path = paste0(gif.path, ""true.field.gif""))"
"0","    "
"0","    # POSTERIOR MEAN"
"0","    image_write(image = image_animate("
"0","      image_join("
"0","        lapply(list.files(dir_out_pm, full.names = TRUE), image_read)), "
"0","      fps = fps), "
"0","      path = paste0(gif.path, ""pos.mean.gif""))"
"0","    "
"0","    #POS SD"
"0","    image_write(image = image_animate("
"0","      image_join("
"0","        lapply(list.files(dir_out_sd, full.names = TRUE), image_read)), "
"0","      fps = fps), "
"0","      path = paste0(gif.path, ""pos.sd.gif""))"
"0","    "
"0","    #POS QUANTILES"
"0","    # 0.025"
"0","    image_write(image = image_animate("
"0","      image_join("
"0","        lapply(list.files(dir_out_q25, full.names = TRUE), image_read)), "
"0","      fps = fps), "
"0","      path = paste0(gif.path, ""pos.q25.gif""))"
"0","    "
"0","    # 0.5"
"0","    image_write(image = image_animate("
"0","      image_join("
"0","        lapply(list.files(dir_out_q5, full.names = TRUE), image_read)), "
"0","      fps = fps), "
"0","      path = paste0(gif.path, ""pos.q5.gif""))"
"0","    "
"0","    # 0.975"
"0","    image_write(image = image_animate("
"0","      image_join("
"0","        lapply(list.files(dir_out_q975, full.names = TRUE), image_read)), "
"0","      fps = fps), "
"0","      path = paste0(gif.path, ""pos.q975.gif""))"
"0","    "
"0","    ## st"
"0","    # u"
"0","    image_write(image = image_animate("
"0","      image_join("
"0","        lapply(list.files(dir_out_s, full.names = TRUE), image_read)), "
"0","      fps = fps), "
"0","      path = paste0(gif.path, ""stat.rnadom.mean.gif""))"
"0","    "
"0","    # st sd"
"0","    image_write(image = image_animate("
"0","      image_join("
"0","        lapply(list.files(dir_out_st.sd, full.names = TRUE), image_read)), "
"0","      fps = fps), "
"0","      path = paste0(gif.path, ""pos.sd.st.gif""))"
"0","    "
"0","    #POS QUANTILES st"
"0","    # 0.025"
"0","    image_write(image = image_animate("
"0","      image_join("
"0","        lapply(list.files(dir_out_st.q25, full.names = TRUE), image_read)), "
"0","      fps = fps), "
"0","      path = paste0(gif.path, ""pos.q25.st.gif""))"
"0","    "
"0","    # 0.5"
"0","    image_write(image = image_animate("
"0","      image_join("
"0","        lapply(list.files(dir_out_st.q5, full.names = TRUE), image_read)), "
"0","      fps = fps), "
"0","      path = paste0(gif.path, ""pos.q5.st.gif""))"
"0","    "
"0","    # 0.975"
"0","    image_write(image = image_animate("
"0","      image_join("
"0","        lapply(list.files(dir_out_st.q975, full.names = TRUE), image_read)), "
"0","      fps = fps), "
"0","      path = paste0(gif.path, ""pos.q975.st.gif""))"
"0","    "
"0","    unlink(dir_out_f, recursive = T)"
"0","    unlink(dir_out_pm, recursive = T)"
"0","    unlink(dir_out_sd, recursive = T)"
"0","    unlink(dir_out_q25, recursive = T)"
"0","    unlink(dir_out_q5, recursive = T)"
"0","    unlink(dir_out_q975, recursive = T)"
"0","    unlink(dir_out_s, recursive = T)"
"0","    unlink(dir_out_st.sd, recursive = T)"
"0","    unlink(dir_out_st.q25, recursive = T)"
"0","    unlink(dir_out_st.q5, recursive = T)"
"0","    unlink(dir_out_st.q975, recursive = T)"
"0","}"
